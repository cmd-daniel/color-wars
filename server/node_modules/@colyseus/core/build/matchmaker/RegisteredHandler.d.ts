import { IncomingMessage } from 'http';
import { EventEmitter } from 'events';
import { RoomCache, SortOptions } from '@colyseus/core/build/matchmaker/driver/api';
import { Room } from '@colyseus/core/build/Room';
import { Type } from '@colyseus/core/build/utils/types';
export declare const INVALID_OPTION_KEYS: Array<keyof RoomCache>;
export type ValidateAuthTokenCallback = (token: string, request?: IncomingMessage) => Promise<any>;
export declare class RegisteredHandler extends EventEmitter {
    name: string;
    klass: Type<Room>;
    options: any;
    filterOptions: string[];
    sortOptions?: SortOptions;
    constructor(name: string, klass: Type<Room>, options: any);
    enableRealtimeListing(): this;
    filterBy(options: string[]): this;
    sortBy(options: SortOptions): this;
    getFilterOptions(options: any): {};
}
